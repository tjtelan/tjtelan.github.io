<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>T.J. Telan - leadership</title>
	<subtitle>Practical DevOps &amp; Developer Experience</subtitle>
	<link href="https://tjtelan.com/tags/leadership/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://tjtelan.com"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-12-10T00:00:00+00:00</updated>
	<id>https://tjtelan.com/tags/leadership/atom.xml</id>
	<entry xml:lang="en">
		<title>Questions to Find the Right Continuous Integration System for You</title>
		<published>2020-12-10T00:00:00+00:00</published>
		<updated>2020-12-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://tjtelan.com/blog/questions-to-find-the-right-continuous-integration-system-for-you/" type="text/html"/>
		<id>https://tjtelan.com/blog/questions-to-find-the-right-continuous-integration-system-for-you/</id>
		<content type="html">&lt;p&gt;Continuous integration is fancy shell scripting. It even uses shell scripting terminology like pipelines, but is obscured with marketing and many seemingly complex and different methods of configuration.&lt;&#x2F;p&gt;
&lt;p&gt;The purpose of this post is to discuss Continuous Integration (CI) Systems at a high level if you are considering switching to a new service. I want to introduce you to a few talking points that aren&#x27;t discussed enough in order to help you make a decision.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-are-the-goals-of-continuous-integration-ci&quot;&gt;What are the goals of Continuous Integration (CI)?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-are-the-goals-of-continuous-integration-ci&quot; aria-label=&quot;Anchor link for: what-are-the-goals-of-continuous-integration-ci&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The functions of continuous integration are very flexible and therefore, and the goals are super simple. Automatically run scripts upon the occurrence of an event.&lt;&#x2F;p&gt;
&lt;p&gt;Common events can be a git commit or a timer event set to run every 5 minutes.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-does-ci-differ-from-shell-scripting&quot;&gt;How does CI differ from shell scripting?&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-does-ci-differ-from-shell-scripting&quot; aria-label=&quot;Anchor link for: how-does-ci-differ-from-shell-scripting&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Continuous integration has a narrow context in which it is intended to run. It has extra structure in order to tell a tighter story. (The CI story leads into another story called Continuous Delivery&#x2F;Deployment (CD), but we will only be focusing on CI)&lt;&#x2F;p&gt;
&lt;p&gt;A best practice of CI is to automatically build and&#x2F;or run tests on every commit in order to validate whether the codebase builds&#x2F;tests are complete without errors.&lt;&#x2F;p&gt;
&lt;p&gt;Basic structure defines conditions as well as commands or actions that should be executed when an event occurs. Conditions such as a new commit in a specific branch, or file paths. Or keywords in commit messages.&lt;&#x2F;p&gt;
&lt;p&gt;On the more advanced side, platform specific features like plugins may be introduced for sending or receiving events from other systems, initiating external triggers based on other pipelines, caching, cleaning up and notifications.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-type-of-ci-systems-that-exist-today&quot;&gt;What type of CI systems that exist today?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-type-of-ci-systems-that-exist-today&quot; aria-label=&quot;Anchor link for: what-type-of-ci-systems-that-exist-today&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;There is no shortage of software that is designed for Continuous Integration. What I believe sets these platforms apart from each other is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The experience and effort involved with setting up a new environment for your organization&lt;&#x2F;li&gt;
&lt;li&gt;Path to configuring new pipelines, and maintaining them over time.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If your organization regularly exercises the creation of new environments, like in consulting orgs, it is reasonable to gain the experience with an open source tool that won’t cost you any money with licensing.&lt;&#x2F;p&gt;
&lt;p&gt;Otherwise, I might suggest picking a system the reduces the friction for pipeline creation and maintenance.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Styles of setting up new pipelines falls into two categories.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stateful-webui-pipeline-config&quot;&gt;Stateful (WebUI) pipeline config&lt;a class=&quot;zola-anchor&quot; href=&quot;#stateful-webui-pipeline-config&quot; aria-label=&quot;Anchor link for: stateful-webui-pipeline-config&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Jenkins is the primary example of configuration via WebUI, as it is the functionality out of the box. Adding pipelines in this system requires a user to log into the WebUI, configure connections to builder systems and methodically define pipelines.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pros&quot;&gt;Pros&lt;a class=&quot;zola-anchor&quot; href=&quot;#pros&quot; aria-label=&quot;Anchor link for: pros&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;The biggest player in this space, Jenkins, is free to install with flexible system requirements.&lt;&#x2F;li&gt;
&lt;li&gt;Relatively low skill required to get started. Setup of pipelines and any subsequent edits are performed through the browser with a few clicks.&lt;&#x2F;li&gt;
&lt;li&gt;Many plugins exist, which probably suit the needs of your org.&lt;&#x2F;li&gt;
&lt;li&gt;Most of the CI in this category are older and mature. Very search engine friendly solutions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cons&quot;&gt;Cons&lt;a class=&quot;zola-anchor&quot; href=&quot;#cons&quot; aria-label=&quot;Anchor link for: cons&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Administration is more difficult and time consuming to perform as footprint increases. Over time the details of the pipeline configuration may drift and be difficult to reproduce for the purposes of documentation or migration.&lt;&#x2F;li&gt;
&lt;li&gt;It is easy to neglect this kind of CI installation. Both a testament to stability, and a detriment to your org when unexpected outages occur. Rebuilding can be tedious and error prone.&lt;&#x2F;li&gt;
&lt;li&gt;Takes a lot of effort to secure natively in a cloud-based future. Typically these CI systems inconveniently end up hiding behind a VPN.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;stateless-file-based-pipeline-config&quot;&gt;Stateless (File-based) pipeline config&lt;a class=&quot;zola-anchor&quot; href=&quot;#stateless-file-based-pipeline-config&quot; aria-label=&quot;Anchor link for: stateless-file-based-pipeline-config&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This is the modern style of CI system. Your TravisCI, Github Action, Azure DevOps&lt;&#x2F;p&gt;
&lt;p&gt;Typically we find this system is hosted through your git provider, or as a separate hosted service that we allow access to the repos. YAML is the most popular config format. &lt;&#x2F;p&gt;
&lt;h4 id=&quot;pros-1&quot;&gt;Pros&lt;a class=&quot;zola-anchor&quot; href=&quot;#pros-1&quot; aria-label=&quot;Anchor link for: pros-1&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Configuration of pipelines stay versioned alongside the codebases that use them.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cons-1&quot;&gt;Cons&lt;a class=&quot;zola-anchor&quot; href=&quot;#cons-1&quot; aria-label=&quot;Anchor link for: cons-1&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;No config schema standards, though. most use a yaml format.&lt;&#x2F;li&gt;
&lt;li&gt;Complexity becomes harder to manage, and requires a commit and push to repos in order to test. Testing contributes clutter in git logs, and uses up build minutes, which is the cost unit that many hosted services bill on.&lt;&#x2F;li&gt;
&lt;li&gt;Limited self-hosted options that are free.&lt;&#x2F;li&gt;
&lt;li&gt;Limited self-hosted options that have small system requirements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;my-opinion&quot;&gt;My opinion&lt;a class=&quot;zola-anchor&quot; href=&quot;#my-opinion&quot; aria-label=&quot;Anchor link for: my-opinion&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;I strongly prefer the stateless type of configuration because it provides a more code-like arena where documentation can be provided.&lt;&#x2F;p&gt;
&lt;p&gt;Mixing the workflow of CI pipeline configuration with your organization’s version control practices can be disruptive if you need to push code in order to see the results of changes to your pipeline. It is a price to pay for the ability to easily correlate changes in codebase with changes in pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;The balance to strike rests on your code hosting provider needs (i.e. costs per user) and the types of technologies and platforms you need to support for building (web, native, mobile, embedded, etc). This flexibility mostly skews support towards building for web-based technologies.&lt;&#x2F;p&gt;
&lt;p&gt;Also, Jenkins technically has file-based pipeline support via Jenkinsfile, but unless my org was already deeply invested in staying with Jenkins, I would steer clear. It is not the future. It is harder than necessary to use.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-are-the-ci-hosting-options&quot;&gt;What are the CI Hosting Options?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-are-the-ci-hosting-options&quot; aria-label=&quot;Anchor link for: what-are-the-ci-hosting-options&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;self-hosting&quot;&gt;Self-hosting&lt;a class=&quot;zola-anchor&quot; href=&quot;#self-hosting&quot; aria-label=&quot;Anchor link for: self-hosting&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Self-hosting means running and maintaining a process on a physical or virtual machine that you have access to.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pros-2&quot;&gt;Pros&lt;a class=&quot;zola-anchor&quot; href=&quot;#pros-2&quot; aria-label=&quot;Anchor link for: pros-2&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Somewhat more private for less effort if hosting in a private location.&lt;&#x2F;li&gt;
&lt;li&gt;Effective use of data center computers. Initial costs may be higher, but maintenance costs are typically lower.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cons-2&quot;&gt;Cons&lt;a class=&quot;zola-anchor&quot; href=&quot;#cons-2&quot; aria-label=&quot;Anchor link for: cons-2&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Being responsible for maintenance&lt;&#x2F;li&gt;
&lt;li&gt;Limited to the platforms that you have available.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;system-as-a-service-hosted&quot;&gt;System as a Service (Hosted)&lt;a class=&quot;zola-anchor&quot; href=&quot;#system-as-a-service-hosted&quot; aria-label=&quot;Anchor link for: system-as-a-service-hosted&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;External systems as a service (Hosted services) allow users to just log in and connect their version control.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pros-3&quot;&gt;Pros&lt;a class=&quot;zola-anchor&quot; href=&quot;#pros-3&quot; aria-label=&quot;Anchor link for: pros-3&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Not responsible for performing maintenance.&lt;&#x2F;li&gt;
&lt;li&gt;Typically authentication is provided, with options to support your org’s auth provider&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cons-3&quot;&gt;Cons&lt;a class=&quot;zola-anchor&quot; href=&quot;#cons-3&quot; aria-label=&quot;Anchor link for: cons-3&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be expensive if you require a lot of build time or resources&lt;&#x2F;li&gt;
&lt;li&gt;Shrinking caps on “free” resources for open source projects&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;issues-to-consider-when-switching-between-ci-platforms&quot;&gt;Issues to Consider when Switching between CI platforms&lt;a class=&quot;zola-anchor&quot; href=&quot;#issues-to-consider-when-switching-between-ci-platforms&quot; aria-label=&quot;Anchor link for: issues-to-consider-when-switching-between-ci-platforms&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;These are some categorized rhetorical questions that you or your organization should ask if you are migrating CI platforms&lt;&#x2F;p&gt;
&lt;h4 id=&quot;threat-model&quot;&gt;Threat model&lt;a class=&quot;zola-anchor&quot; href=&quot;#threat-model&quot; aria-label=&quot;Anchor link for: threat-model&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Do you need to be deployed on-site?&lt;&#x2F;li&gt;
&lt;li&gt;What are the upfront and ongoing costs associated?&lt;&#x2F;li&gt;
&lt;li&gt;Do you have secrets (like private keys, API tokens) that are needed at build time?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;contributor-model&quot;&gt;Contributor model&lt;a class=&quot;zola-anchor&quot; href=&quot;#contributor-model&quot; aria-label=&quot;Anchor link for: contributor-model&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;How are contributors logging in?&lt;&#x2F;li&gt;
&lt;li&gt;What are the costs associated per seat?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;maintenance&quot;&gt;Maintenance&lt;a class=&quot;zola-anchor&quot; href=&quot;#maintenance&quot; aria-label=&quot;Anchor link for: maintenance&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Who is responsible for the health of the pipeline?&lt;&#x2F;li&gt;
&lt;li&gt;How much time&#x2F;money are you budgeting to spend on maintenance and improvements?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cost-of-build-minutes&quot;&gt;Cost of Build minutes&lt;a class=&quot;zola-anchor&quot; href=&quot;#cost-of-build-minutes&quot; aria-label=&quot;Anchor link for: cost-of-build-minutes&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;For open source projects, how many build minutes are being used?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;responsiveness-needs&quot;&gt;Responsiveness needs&lt;a class=&quot;zola-anchor&quot; href=&quot;#responsiveness-needs&quot; aria-label=&quot;Anchor link for: responsiveness-needs&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;How many concurrent builds does your org require?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;technologies-used&quot;&gt;Technologies used&lt;a class=&quot;zola-anchor&quot; href=&quot;#technologies-used&quot; aria-label=&quot;Anchor link for: technologies-used&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Containerizing builds is popular for isolation. But not all projects can build within a container.&lt;&#x2F;li&gt;
&lt;li&gt;Apple, Microsoft and embedded projects are not nearly as flexible and may require special considerations or resources.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;delivery-deployment-model&quot;&gt;Delivery&#x2F;Deployment model&lt;a class=&quot;zola-anchor&quot; href=&quot;#delivery-deployment-model&quot; aria-label=&quot;Anchor link for: delivery-deployment-model&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;What do you need to happen after a build passes?&lt;&#x2F;li&gt;
&lt;li&gt;Are you creating a build artifact that needs to be stored somewhere?&lt;&#x2F;li&gt;
&lt;li&gt;What is the desired frequency between build vs delivery&#x2F;deploy?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Not all continuous integration is considered equal. But they all provide basically the same functions. In most cases, it is possible to self-host and do everything yourself. But sometimes it is worth paying money to a product &#x2F; service that takes care of your needs. It is really all about making sure you know what the trade-offs are for your specific case.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Re: Reading More Technical Content Can Help You Improve Your Content Creation Skills</title>
		<published>2020-12-03T00:00:00+00:00</published>
		<updated>2020-12-03T00:00:00+00:00</updated>
		<link rel="alternate" href="https://tjtelan.com/blog/re-reading-more-technical-content-can-help-you-improve-your-content-creation-skills/" type="text/html"/>
		<id>https://tjtelan.com/blog/re-reading-more-technical-content-can-help-you-improve-your-content-creation-skills/</id>
		<content type="html">&lt;p&gt;This post is in response to &lt;a rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.stephaniemorillo.co&#x2F;post&#x2F;reading-more-technical-content-can-help-you-improve-your-content-creation-skills-here-s-how&quot;&gt;Stephanie Morillo’s post&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The main piece of advice that is elaborated upon is to &lt;strong&gt;read a lot of technical content&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;What I think is very helpful about this post are the questions that are asked. I thought it would be a good idea to answer these questions so that I can share my opinions around how I read through technical content.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-do-i-like-a-piece-of-technical-content&quot;&gt;Why do I like a piece of technical content?&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-do-i-like-a-piece-of-technical-content&quot; aria-label=&quot;Anchor link for: why-do-i-like-a-piece-of-technical-content&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I can answer this in different ways depending on the context that leads me to find technical content. The main two contexts being discovered through social media, or via a search engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;through-social-media&quot;&gt;Through social media&lt;a class=&quot;zola-anchor&quot; href=&quot;#through-social-media&quot; aria-label=&quot;Anchor link for: through-social-media&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;I spend a lot of time on technical social media, like Reddit, Hacker News, Dev.to, and Twitter and I mostly only read the trending posts. So in these cases, an individual’s or company’s personality drives my interest over the actual content.&lt;&#x2F;p&gt;
&lt;p&gt;A lot of the time this leads to some cult of personality for popular posts in the comment section. This can’t be helped. However, this kind of engagement occasionally leads to interesting and tangential discussion. I like when the author can participate in the discussion as well, but this is a rare occurrence.&lt;&#x2F;p&gt;
&lt;p&gt;I prefer concepts over code in the case of social media discovery. Emphasis when I’m reading through something that is about an ecosystem I don’t have experience using. I like having my hand held lightly, and guided through the examples with metaphor or images.&lt;&#x2F;p&gt;
&lt;p&gt;Bonus points if you both provide links for more context, as well as provide a simplified summary. Help frame how I should think, and even give negative examples for how I should not think if it helps.&lt;&#x2F;p&gt;
&lt;p&gt;These posts are primarily to entertain me, and then to inform me. I want the attention to readability with layout and markup to be more considered. If there are images to help set tone, I’d rather they be well used memes, or diagrams.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;through-search&quot;&gt;Through search&lt;a class=&quot;zola-anchor&quot; href=&quot;#through-search&quot; aria-label=&quot;Anchor link for: through-search&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;If I’m searching for something technical, it’s more likely that I’m doing research, design or implementation. So personality may continue to play a role in my likelihood to revisit an article, but the code snippets and coherence of an explanation is more important.&lt;&#x2F;p&gt;
&lt;p&gt;Bonus points if consideration was made for keyword searching or organized textbook-like. I don’t need my hand held as much in his case. Just point me in a direction. I don’t want the entire post to be read through carefully unless the post is about low-level detail.&lt;&#x2F;p&gt;
&lt;p&gt;I’ll be grumpy, but I will endure a post that is harder to skim if the content is promising enough.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;who-is-their-intended-audience&quot;&gt;Who is their intended audience?&lt;a class=&quot;zola-anchor&quot; href=&quot;#who-is-their-intended-audience&quot; aria-label=&quot;Anchor link for: who-is-their-intended-audience&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Part of reading a lot of technical content means reading things that are not specifically targeted at myself.&lt;&#x2F;p&gt;
&lt;p&gt;When the content involves discussion of code, I really prefer a lot of gentle, but explicit nudging around the skill level required to make sense of what is in the post.&lt;&#x2F;p&gt;
&lt;p&gt;Wide audience is generally my least favorite because content has to be high-level enough to not lose anyone. If you’re aiming wide, then say so or be very obvious. &lt;&#x2F;p&gt;
&lt;p&gt;Textbook-style is good enough for me. Build up concepts in a reasonable sequence. Or link to posts or definitions that talk about foundational concepts that you’re introducing. Unless you’ve already stated an expected skill level, I will feel like you don’t know the audience you’re writing to.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-does-this-company-individual-do-really-well&quot;&gt;What does this (company&#x2F;individual) do really well?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-does-this-company-individual-do-really-well&quot; aria-label=&quot;Anchor link for: what-does-this-company-individual-do-really-well&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This kind of question is mostly for judging a collection of posts. Any single post may have left positive impressions on me of being informative, concise, funny, easy to read. But I don’t feel like I can judge what the competencies or patterns of a company or individual is until I see other work.&lt;&#x2F;p&gt;
&lt;p&gt;I look for consistency in voice. Are we having a conversation. Am I reading a monologue? Do you know where your content beats and break things up with whitespace or images? Are you flexible enough with how you present ideas so that I understand you or know what homework I have in order to understand? Visual branding also comes into mind when discussing consistency. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-does-this-content-help-me-do&quot;&gt;What does this content help me do?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-does-this-content-help-me-do&quot; aria-label=&quot;Anchor link for: what-does-this-content-help-me-do&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;My expectations of what the content offers me is again, dependent on the context in which I was introduced.&lt;&#x2F;p&gt;
&lt;p&gt;In general, if it is through social media, I’m looking first to have some kind of entertainment aspect. I’m looking for a breadth of information that allows me to insert my own ideas. I know that content creators aren’t always in control of where and when their content is posted, so this isn’t always going to be fair to judge entertainment value when the content is informational. But it is a plus if the author can be engaging and educational because it takes effort to do well.&lt;&#x2F;p&gt;
&lt;p&gt;Conversely, if it is through organic search, I’m looking for some kind of informational value. Help me solve a problem, or understand a model of thinking better.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-would-doing-or-implementing-x-improve-my-content&quot;&gt;How would doing (or implementing) “X” improve my content?&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-would-doing-or-implementing-x-improve-my-content&quot; aria-label=&quot;Anchor link for: how-would-doing-or-implementing-x-improve-my-content&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This is a great question. Often when I ask myself this question, I’m considering the visual branding of an individual. But lately I’ve also been thinking about how my favorite creators structure and pace the flow of information in their posts while balancing their voice. This is why it is a good idea to follow content creators that resonate with you, because everyone learns to strike this balance differently. And typically the more someone writes technical content, the more natural and easier to read they get.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-can-they-improve-upon-to-make-this-content-even-more-effective&quot;&gt;What can they improve upon to make this content even more effective?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-can-they-improve-upon-to-make-this-content-even-more-effective&quot; aria-label=&quot;Anchor link for: what-can-they-improve-upon-to-make-this-content-even-more-effective&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;At least for me, it is easier to edit someone else’s work. Naturally, I’m constantly thinking about how little bits of friction can be smoothed out and so that I could understand it better. This could mean mixing the styles of creators together, and I try to identify creators who are particularly good (or sometimes bad) at one thing so I can pay attention to how their style evolves.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I don’t know if this post will be useful to others, but it was a good exercise for me. If you’re a content creator, I encourage you to read through Stephanie’s original post. Ask yourself these questions and try to give concrete answers. &lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>DevOps Helps you be a Better Leader</title>
		<published>2020-11-06T00:00:00+00:00</published>
		<updated>2020-11-07T00:00:00+00:00</updated>
		<link rel="alternate" href="https://tjtelan.com/blog/devops-helps-you-be-a-better-leader/" type="text/html"/>
		<id>https://tjtelan.com/blog/devops-helps-you-be-a-better-leader/</id>
		<content type="html">&lt;p&gt;&lt;em&gt;This is the first of a series about helping your organization embrace DevOps.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;devops-is-misunderstood&quot;&gt;DevOps is misunderstood&lt;a class=&quot;zola-anchor&quot; href=&quot;#devops-is-misunderstood&quot; aria-label=&quot;Anchor link for: devops-is-misunderstood&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;DevOps is buzzwordy – so hot right now. Like all tech development trends, everyone wants it, but everyone also has their own ideas about the kind of problems it will solve. This is a precarious situation, because a lot of people aren’t wrong. But they are unaware that their version of the truth is so narrow that they end up missing the big picture.&lt;&#x2F;p&gt;
&lt;p&gt;In this post, I’ll discuss DevOps at a high level by addressing: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;What is (and what isn’t) DevOps&lt;&#x2F;li&gt;
&lt;li&gt;How DevOps differs from the “normal” development process you may already have&lt;&#x2F;li&gt;
&lt;li&gt;How practicing DevOps can reduce time and money required for development and operations&lt;&#x2F;li&gt;
&lt;li&gt;How nurturing a DevOps culture will increase the quality of life for everyone working on your product&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There are many more topics to discuss, but we must stay focused! This should lay the foundation to allow for constructive conversation about how DevOps works in your organization. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;who-should-read-this-post&quot;&gt;Who should read this post?&lt;a class=&quot;zola-anchor&quot; href=&quot;#who-should-read-this-post&quot; aria-label=&quot;Anchor link for: who-should-read-this-post&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This post is primarily intended for people who need to know the purpose of DevOps because they’re managing a team or hiring for a DevOps skill set. You also might find it helpful if you’re just wondering what DevOps is all about as a developer, operator, student, or in a related, non-technical role.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conventions-and-definitions&quot;&gt;Conventions and Definitions&lt;a class=&quot;zola-anchor&quot; href=&quot;#conventions-and-definitions&quot; aria-label=&quot;Anchor link for: conventions-and-definitions&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Let’s start with some definitions and conventions so we’re on the same page.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Environment&lt;&#x2F;strong&gt; or &lt;strong&gt;space&lt;&#x2F;strong&gt; may be used interchangeably. It refers to the location where code is being executed. A laptop or workstation are examples of environments that we can physically touch. But Kubernetes, or “the cloud” are examples of more abstract environments.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Development environment&lt;&#x2F;strong&gt; will refer to any environment that is primarily used by a single person for the purposes of writing code, such as a laptop or a workstation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Production environment&lt;&#x2F;strong&gt; will refer to any environment that is shared, regardless of whether external customers are using it. An internally used environment used only for testing purposes is a production environment. Big differences between a development environment and a production environment may be complexity or scale at which components are deployed. As well as the amount of targeted automation to perform changes such as deployment or collection of analytics. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Development&lt;&#x2F;strong&gt; &lt;em&gt;(Dev)&lt;&#x2F;em&gt; is a phase and a team we associate with writing code. Specifically, it refers to code that has not yet been released officially to a wider audience. When a project is in development, there is an implication that it may not yet be stable. The people who do the code writing are called Developers, or Dev.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Operations&lt;&#x2F;strong&gt; &lt;em&gt;(Ops)&lt;&#x2F;em&gt; is a phase and a team we associate with building and maintaining the environment(s) used for running code from Development, as well as infrastructure used to support the running code. The people who run code may also be Developers, but they are also commonly known as Operators, Ops, SysAdmins, SREs, Production Engineers, and increasingly (and incorrectly) as DevOps Engineers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;DevOps&lt;&#x2F;strong&gt; is the art of joining principles from traditional software Development and Operations so both can work better together. DevOps is not a phase of development, nor is it a role, despite the emergence of DevOps engineering roles or teams. It is an organization’s professional culture, and emotional intelligence for working together as a single team. The purpose of DevOps is managing expected behavior of the product in production with respect to constant “change of state” (we’ll talk about that soon).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem-devops-solves&quot;&gt;The problem DevOps solves&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-problem-devops-solves&quot; aria-label=&quot;Anchor link for: the-problem-devops-solves&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;An industry trope is the antagonistic rivalry about whose role, Dev or Ops, is more important. But it doesn’t need to be a battle. DevOps is a culture or method of interaction between Dev and Ops and a direct result is shortened feedback loops between writing code (development) and running code (operations). &lt;&#x2F;p&gt;
&lt;p&gt;Admittedly, “DevOps” is a more complex concept when compared to Dev or Ops, which muddies an otherwise straightforward conversation because the actual tasks of practicing DevOps are not one-size-fits all.&lt;&#x2F;p&gt;
&lt;p&gt;Software is rarely a single moving piece. The benefit is the flexibility to incrementally change the state of any single piece. The “change of state” refers to updates to code or the supporting infrastructure, and effectively communicating those changes to the people involved. As a system grows in complexity, it takes some effort to make changes without disrupting other pieces.&lt;&#x2F;p&gt;
&lt;p&gt;DevOps, as a practice, is about managing the changes to those moving pieces in an organized and intentional manner. An example of where DevOps builds this bridge is deploying to production. Thin encourages releasing and running code in a way that Devs and Ops can anticipate each other’s changes, at a high rate. These procedures are preferably automated, for speed and consistency.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;change-the-job-title-on-your-reqs-devops-is-not-a-role&quot;&gt;Change the job title on your reqs: DevOps is not a role!&lt;a class=&quot;zola-anchor&quot; href=&quot;#change-the-job-title-on-your-reqs-devops-is-not-a-role&quot; aria-label=&quot;Anchor link for: change-the-job-title-on-your-reqs-devops-is-not-a-role&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Unfortunately, DevOps is increasingly used as a catch-all for all engineering tasks that do not have an owner. The result is that it starts to lose any specific meaning.&lt;&#x2F;p&gt;
&lt;p&gt;A recent (and regrettable) trend in job postings is to rebrand SysAdmin or Operations roles into “DevOps engineer” roles. This makes it more difficult for companies and job-seekers alike to make a good match.&lt;&#x2F;p&gt;
&lt;p&gt;Case in point: coding is often listed as a requirement for a “DevOps Engineer” role, but if that role is actually an operations role, there will be few opportunities to write code. This means that new hires joining with the expectation that their role includes coding will feel misled, and turnover will be increased.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-does-a-solution-look-like&quot;&gt;What does a solution look like?&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-does-a-solution-look-like&quot; aria-label=&quot;Anchor link for: what-does-a-solution-look-like&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;So what is DevOps if not a role? Let’s describe practicing DevOps through the actions of the members of the technical organization.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;devops-enabled-dev-vs-pure-development&quot;&gt;DevOps-enabled Dev vs Pure Development&lt;a class=&quot;zola-anchor&quot; href=&quot;#devops-enabled-dev-vs-pure-development&quot; aria-label=&quot;Anchor link for: devops-enabled-dev-vs-pure-development&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Unlike pure development, DevOps is primarily about improving processes and analytics capabilities to remove friction from developers’ workflows, outside of writing code. It is not about product functionality or quality of the product code. For example, Devs define the terms of success or failure of the behavior of their code in production. But thanks to DevOps practices, they can analyze that data to inform their next actions. &lt;&#x2F;p&gt;
&lt;p&gt;Devs in a DevOps practice have a shorter onboarding process as well. Common tasks such as software requirements for build code and deploying code are documented through automation that is kept up to date. With this, new devs can focus on the codebase on day one, not spending all day reading documentation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;devops-enabled-ops-vs-pure-operations&quot;&gt;DevOps-enabled Ops vs Pure Operations&lt;a class=&quot;zola-anchor&quot; href=&quot;#devops-enabled-ops-vs-pure-operations&quot; aria-label=&quot;Anchor link for: devops-enabled-ops-vs-pure-operations&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Unlike pure operations, DevOps is proactive about observing how running code is behaving from within the code rather than only observing results. The purpose is to maximize the value of human time by only requiring a person to look into a problem if existing automated strategies fail to resolve it.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, the introduction of Continuous Integration&#x2F;Continuous Delivery (or Deployment) pipeline (aka CI&#x2F;CD) is an important collection of automation shared between Devs and Ops. The Devs know how to push code for build for the CI, and the Ops know how to pull build artifacts for deployment. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;devops-enabled-management&quot;&gt;DevOps-enabled management&lt;a class=&quot;zola-anchor&quot; href=&quot;#devops-enabled-management&quot; aria-label=&quot;Anchor link for: devops-enabled-management&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;There is a lot to be said about DevOps-enabled management, but I will keep it brief (but stay tuned, this will be the topic of a future post). For now, I will be focusing on communication, quality of life of your employees, and a short aside on saving money on cloud operational expenditure.&lt;&#x2F;p&gt;
&lt;p&gt;As a product manager, DevOps directly serves the priorities and product roadmap, as they will be naturally driven from the analytics of your production environments. More objective discussion can be had with your developers and operators when you can provide more specific details and requirements to what is motivating your decision making as a manager. Data about feature usage or responsiveness can more easily be measured and placed onto a dashboard if the metrics to be tracked are known during development, rather than after a feature is complete. This production data can help facilitate discussions with your stakeholders.&lt;&#x2F;p&gt;
&lt;p&gt;As a hiring manager, DevOps enables you to be more specific about what it is you are looking for in job applicants. If you’re looking for a candidate with broad skills, you can justify why with actual functions that need served. Otherwise, you can also be much more specific with need for specialized roles since the functions of your direct reports feed into the quality of your analytics. &lt;&#x2F;p&gt;
&lt;p&gt;Lastly, if you operate in cloud infrastructure such as AWS or Azure, your DevOps practice should condition you to analyze your compute usage for ways to save money. It can show you when you may be able to shut down compute resources for the night to save costs on guaranteed idle time that you would otherwise be paying for. Automation can automatically turn them back on for the work day if needed by devs, but otherwise, you may find that these resources are often unintentionally abandoned by devs.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;If you are a manager, how do you start a DevOps practice? You start by consistently being data-driven through requests for data from your employees. Show them how the data influences your decision making. The consistency of your requests ought to naturally lead to automation of data collection.&lt;&#x2F;p&gt;
&lt;p&gt;Remember that DevOps is more than operations. It is a professional workplace culture that starts with management through commitment to improve communication. &lt;&#x2F;p&gt;
&lt;p&gt;To do both drive and support this, management must be very specific about what information they need from their product, then align their processes to reinforce these needs. Realize that this kind of organization of processes is optimal. The perceived constraints your employees experience provides very clear expectations for team success while allowing individual opportunity to be creative and fulfilled without setting expectations that it is any individual person’s responsibility.&lt;&#x2F;p&gt;
&lt;p&gt;DevOps is a practice that produces solutions that scale to the needs of the organization and humanizes the people who create solutions. It allows people to specialize their craft while providing a structure to let them trust that the rest of their surroundings (infrastructure) will be ready to accept any of their new creations.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
